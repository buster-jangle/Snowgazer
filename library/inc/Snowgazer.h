/*

Project Snowgazer Snowgazer.h library header
Initial file automatically generated by PROGENY on 09/21/24 16:00:04

 Template library header
*/


#ifndef Snowgazer_DEF // prevent recursive inclusion
#define Snowgazer_DEF

#include <string>
#include "plog/Log.h"
#include "plog/Initializers/RollingFileInitializer.h"

using namespace std; // default namespace

class Snowgazer{
private:

public:
    ///
    int status;

    Snowgazer();

    /// Library init function. Input a PLOG appender to allow the library to log through the parent executable.
    /// \param severity The minimum severity to report. ex: plog::info
    /// \return pointer to a plog appender
    bool init(plog::Severity severity, plog::IAppender* appender);

    ///  Multiplies two integers
    /// \param a
    /// \param b
    /// \return Result of a * b
    int multiply(int a, int b);

    /// Overloaded multiply function
    /// \param a
    /// \param b
    /// \return output
    float multiply(float a, float b);
};



#endif
